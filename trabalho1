.data
writedoc: .asciiz "./newfile.txt"
filename: .asciiz "./input.asm"
buffer: .space 1
hashtag: .byte '#'	#verificar se podemos mudar para codigo ascii correspondente



.text
la $t0, buffer		#armazena em t0 o endereço do buffer
lb $s3, hashtag
move $t3, $zero	

#####################################################
#                                 Abrir arquivo para leitura                                #
#####################################################
li $v0, 13		
la $a0, filename	#posteriormente receber string do usuario
li $a1, 0		#0 = leitura
li $a2, 0
syscall
move $s0, $v0


#####################################################
#   Realiza leitura de caracteres do arquivo e armazena em memoria   #
#####################################################	
ler_letra:
	li $v0, 14		
	move $a0, $s0				#seta arquivo para leitura
	la $a1, 0($t0)				#define endereço do buffer 
	li $a2, 1				#tamanho do buffer
	syscall
	lb $t1, 0($t0)
	beq  $t1, $s3, jump_line		#verifica se possui hashtag
	addi $t0, $t0, 1			#aponta para o proximo espaço na memoria
	addi $t3, $t3, 1			#contador de caracteres
	beq  $v0 $zero, fim_leitura		#verifica fim do arquivo		
	j ler_letra


#####################################################
#                    Ignora caracteres posteriores a # ate que                      #
#                              encontre um fim de linha                                    #
#####################################################	
jump_line:
	li $v0, 14		
	move $a0, $s0			
	la $a1, 0($t0)			
	li $a2, 1			
	syscall
	
	lbu $t1, 0($t0)
	beq $t1, 10, ler_letra			#volta para gravaçao
	j jump_line

		
#####################################################
#                                 Fecha arquivo de leitura                                  #
#####################################################		
fim_leitura:	
li   $v0, 16       				# system call for close file
move $a0, $s0      				# file descriptor to close
syscall       


#####################################################
#                 Escreve o arquivo resultante em um novo arquivo             #
#####################################################
escreve_arquivo:
	#Abre um novo arquivo
	li $v0, 13		
	la $a0, writedoc
	li $a1, 1				#Abrir para leitura
	li $a2, 0
	syscall
	move $s1, $v0

	
	li   $v0, 15       			#System call pra escrever em um arquivo
	move $a0, $s1
	sub $t0, $t0, $t3			#Volta o ponteiro de endereço para posição inicial
	move   $a1, $t0  			#Endereço de referencia para escrita
	move   $a2, $t3      			#Tamanho do arquivo
	syscall
 
	# Fechar arquivo
	li   $v0, 16
	move $a0, $s1
	syscall
